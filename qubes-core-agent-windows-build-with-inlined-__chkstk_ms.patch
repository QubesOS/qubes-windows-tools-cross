From b3050b7f6c0b542205464271b4e2ea92a164b292 Mon Sep 17 00:00:00 2001
From: Ivan Kardykov <kardykov@tabit.pro>
Date: Thu, 9 Dec 2021 13:11:48 +0300
Subject: [PATCH] build with inlined __chkstk_ms

---
 Makefile                  |  4 +--
 src/relocate-dir/chkstk.S | 57 +++++++++++++++++++++++++++++++++++++++
 2 files changed, 59 insertions(+), 2 deletions(-)
 create mode 100644 src/relocate-dir/chkstk.S

diff --git a/Makefile b/Makefile
index d611900..8005630 100644
--- a/Makefile
+++ b/Makefile
@@ -38,8 +38,8 @@ $(OUTDIR_ANY)/service-policy.exe: $(wildcard src/service-policy/*.cs)
 $(OUTDIR_ANY)/service-policy.cfg: src/service-policy/service-policy.cfg
 	cp $^ $@
 
-$(OUTDIR)/relocate-dir.exe: $(wildcard src/relocate-dir/*.c)
-	$(CC) $^ $(CFLAGS) -I$(DDK_PATH) -e NtProcessStartup -Wl,--subsystem,native -L $(OUTDIR) -lntdll -nostdlib -D__INTRINSIC_DEFINED__InterlockedAdd64 -fstack-check -Wl,--stack,16777216 -mno-stack-arg-probe -municode -Wl,--no-insert-timestamp -o $@
+$(OUTDIR)/relocate-dir.exe: $(wildcard src/relocate-dir/*.c) src/relocate-dir/chkstk.S
+	$(CC) $^ $(CFLAGS) -I$(DDK_PATH) -e NtProcessStartup -Wl,--subsystem,native -L $(OUTDIR) -lntdll -nostdlib -D__INTRINSIC_DEFINED__InterlockedAdd64 -municode -Wl,--no-insert-timestamp -o $@
 
 $(RPC_FILES): $(OUTDIR_ANY)/qubes-rpc/%: src/qrexec-services/%
 	cp $^ $@
diff --git a/src/relocate-dir/chkstk.S b/src/relocate-dir/chkstk.S
new file mode 100644
index 0000000..be9781f
--- /dev/null
+++ b/src/relocate-dir/chkstk.S
@@ -0,0 +1,57 @@
+#include "assembly.h"
+
+// _chkstk routine
+// This routine is windows specific
+// http://msdn.microsoft.com/en-us/library/ms648426.aspx
+
+#ifdef __i386__
+
+.text
+.balign 4
+DEFINE_COMPILERRT_FUNCTION(__chkstk_ms)
+        push   %ecx
+        push   %eax
+        cmp    $0x1000,%eax
+        lea    12(%esp),%ecx
+        jb     1f
+2:
+        sub    $0x1000,%ecx
+        orl    $0,(%ecx)
+        sub    $0x1000,%eax
+        cmp    $0x1000,%eax
+        ja     2b
+1:
+        sub    %eax,%ecx
+        orl    $0,(%ecx)
+        pop    %eax
+        pop    %ecx
+        ret
+END_COMPILERRT_FUNCTION(__chkstk_ms)
+
+#endif // __i386__
+
+#ifdef __x86_64__
+
+.text
+.balign 4
+DEFINE_COMPILERRT_FUNCTION(___chkstk_ms)
+        push   %rcx
+        push   %rax
+        cmp    $0x1000,%rax
+        lea    24(%rsp),%rcx
+        jb     1f
+2:
+        sub    $0x1000,%rcx
+        orl    $0,(%rcx)
+        sub    $0x1000,%rax
+        cmp    $0x1000,%rax
+        ja     2b
+1:
+        sub    %rax,%rcx
+        orl    $0,(%rcx)
+        pop    %rax
+        pop    %rcx
+        ret
+END_COMPILERRT_FUNCTION(___chkstk_ms)
+
+#endif // __x86_64__
-- 
2.31.1

